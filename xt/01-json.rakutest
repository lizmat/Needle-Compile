BEGIN %*ENV<RAKU_TEST_DIE_ON_FAIL> = 1;
use Test;
use Needle::Compile;

use JSON::Fast;
my %meta := from-json $*PROGRAM.parent.parent.add('META6.json').slurp;

# Adding a .type method to an object
my role Type {
    has $.type;
    method raku() { callsame() ~ " but Type('$!type')" }
}

# Ways to check "auth"
my @auth =
  "jp:auth",
  "auth" but Type<json-path>,
  "json-path" => "auth",
  '{ |jp("auth") }',
  "code" => 'jp("auth").Slip',
;

plan +@auth;

for @auth {
    subtest "JSON path: auth" => {
        plan 2;

        my &auth := compile-needle($_);
        isa-ok &auth, Callable, "Testing $_.raku()";

        is-deeply auth(%meta), ("zef:lizmat",).Slip, 'produced ok';
    }
}

# vim: expandtab shiftwidth=4
